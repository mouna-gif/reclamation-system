{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\crm\\\\frontend\\\\src\\\\components\\\\Complaints\\\\ComplaintForm.js\",\n  _s = $RefreshSig$();\n// src/components/Complaints/ComplaintForm.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { complaintsApi, slaApi } from '../../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ComplaintForm = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [loadingCategories, setLoadingCategories] = useState(true); // Ajout d'un état de chargement\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const slaData = await slaApi.getAll();\n        // Vérification et extraction correcte des catégories\n        const uniqueCategories = [...new Set(slaData.map(sla => sla.category))];\n        setCategories(uniqueCategories);\n      } catch (err) {\n        console.error('Erreur lors du chargement des catégories:', err);\n        setError('Impossible de charger les catégories. Veuillez réessayer plus tard.');\n      } finally {\n        setLoadingCategories(false); // Fin du chargement dans tous les cas\n      }\n    };\n    fetchCategories();\n  }, []);\n\n  // ... (le reste du code reste inchangé jusqu'au JSX)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"complaint-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Nouvelle R\\xE9clamation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: ({\n        isValid\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"complaint-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"Cat\\xE9gorie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), loadingCategories ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-message\",\n            children: \"Chargement des cat\\xE9gories...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              as: \"select\",\n              id: \"category\",\n              name: \"category\",\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"S\\xE9lectionnez une cat\\xE9gorie\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category,\n                children: category\n              }, `${category}-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"category\",\n              component: \"div\",\n              className: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ComplaintForm, \"D+/soFg1fImoxFyHBt0mA/Vt2es=\", false, function () {\n  return [useNavigate];\n});\n_c = ComplaintForm;\nexport default ComplaintForm;\nvar _c;\n$RefreshReg$(_c, \"ComplaintForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Formik","Form","Field","ErrorMessage","Yup","complaintsApi","slaApi","jsxDEV","_jsxDEV","Fragment","_Fragment","ComplaintForm","_s","categories","setCategories","isSubmitting","setIsSubmitting","error","setError","loadingCategories","setLoadingCategories","navigate","fetchCategories","slaData","getAll","uniqueCategories","Set","map","sla","category","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","validationSchema","onSubmit","handleSubmit","isValid","htmlFor","as","id","name","value","index","component","_c","$RefreshReg$"],"sources":["C:/Users/MSI/Desktop/crm/frontend/src/components/Complaints/ComplaintForm.js"],"sourcesContent":["// src/components/Complaints/ComplaintForm.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { complaintsApi, slaApi } from '../../services/api';\n\nconst ComplaintForm = () => {\n  const [categories, setCategories] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [loadingCategories, setLoadingCategories] = useState(true); // Ajout d'un état de chargement\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const slaData = await slaApi.getAll();\n        // Vérification et extraction correcte des catégories\n        const uniqueCategories = [...new Set(slaData.map(sla => sla.category))];\n        setCategories(uniqueCategories);\n      } catch (err) {\n        console.error('Erreur lors du chargement des catégories:', err);\n        setError('Impossible de charger les catégories. Veuillez réessayer plus tard.');\n      } finally {\n        setLoadingCategories(false); // Fin du chargement dans tous les cas\n      }\n    };\n\n    fetchCategories();\n  }, []);\n\n  // ... (le reste du code reste inchangé jusqu'au JSX)\n\n  return (\n    <div className=\"complaint-form-container\">\n      <h2>Nouvelle Réclamation</h2>\n\n      {error && <div className=\"error-message\">{error}</div>}\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ isValid }) => (\n          <Form className=\"complaint-form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"category\">Catégorie</label>\n              {loadingCategories ? (\n                <div className=\"loading-message\">Chargement des catégories...</div>\n              ) : (\n                <>\n                  <Field as=\"select\" id=\"category\" name=\"category\" className=\"form-control\">\n                    <option value=\"\">Sélectionnez une catégorie</option>\n                    {categories.map((category, index) => (\n                      <option key={`${category}-${index}`} value={category}>\n                        {category}\n                      </option>\n                    ))}\n                  </Field>\n                  <ErrorMessage name=\"category\" component=\"div\" className=\"error\" />\n                </>\n              )}\n            </div>\n\n            {/* ... (le reste du formulaire reste inchangé) */}\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default ComplaintForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}