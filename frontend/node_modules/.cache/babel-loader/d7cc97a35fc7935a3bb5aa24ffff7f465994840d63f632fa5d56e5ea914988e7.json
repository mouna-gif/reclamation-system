{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\crm\\\\frontend\\\\src\\\\components\\\\SLA\\\\SLAIndicator.js\";\nimport React from 'react';\nimport { formatDistanceToNow, isPast } from 'date-fns';\nimport { fr } from 'date-fns/locale';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SLAIndicator = ({\n  sla\n}) => {\n  if (!sla || !sla.dueDate) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sla-na\",\n      children: \"Non applicable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n  const dueDate = new Date(sla.dueDate);\n  const now = new Date();\n  const isExpired = isPast(dueDate);\n  const isAtRisk = !isExpired && dueDate - now < 24 * 3600 * 1000; // Moins de 24h\n\n  let statusClass = 'sla-ok';\n  if (isExpired) {\n    statusClass = 'sla-expired';\n  } else if (isAtRisk) {\n    statusClass = 'sla-risk';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `sla-indicator ${statusClass}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sla-status\",\n      children: isExpired ? 'Dépassé' : isAtRisk ? 'À risque' : 'Dans les temps'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sla-time\",\n      children: isExpired ? `Dépassé de ${formatDistanceToNow(dueDate, {\n        locale: fr,\n        addSuffix: false\n      })}` : `Expire dans ${formatDistanceToNow(dueDate, {\n        locale: fr,\n        addSuffix: false\n      })}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sla-date\",\n      children: [\"\\xC9ch\\xE9ance: \", dueDate.toLocaleDateString('fr-FR', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = SLAIndicator;\nexport default SLAIndicator;\nvar _c;\n$RefreshReg$(_c, \"SLAIndicator\");","map":{"version":3,"names":["React","formatDistanceToNow","isPast","fr","jsxDEV","_jsxDEV","SLAIndicator","sla","dueDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","now","isExpired","isAtRisk","statusClass","locale","addSuffix","toLocaleDateString","day","month","year","hour","minute","_c","$RefreshReg$"],"sources":["C:/Users/MSI/Desktop/crm/frontend/src/components/SLA/SLAIndicator.js"],"sourcesContent":["import React from 'react';\nimport { formatDistanceToNow, isPast } from 'date-fns';\nimport { fr } from 'date-fns/locale';\n\nconst SLAIndicator = ({ sla }) => {\n  if (!sla || !sla.dueDate) {\n    return <span className=\"sla-na\">Non applicable</span>;\n  }\n\n  const dueDate = new Date(sla.dueDate);\n  const now = new Date();\n  const isExpired = isPast(dueDate);\n  const isAtRisk = !isExpired && (dueDate - now) < 24 * 3600 * 1000; // Moins de 24h\n\n  let statusClass = 'sla-ok';\n  if (isExpired) {\n    statusClass = 'sla-expired';\n  } else if (isAtRisk) {\n    statusClass = 'sla-risk';\n  }\n\n  return (\n    <div className={`sla-indicator ${statusClass}`}>\n      <div className=\"sla-status\">\n        {isExpired ? 'Dépassé' : isAtRisk ? 'À risque' : 'Dans les temps'}\n      </div>\n      <div className=\"sla-time\">\n        {isExpired\n          ? `Dépassé de ${formatDistanceToNow(dueDate, { locale: fr, addSuffix: false })}`\n          : `Expire dans ${formatDistanceToNow(dueDate, { locale: fr, addSuffix: false })}`\n        }\n      </div>\n      <div className=\"sla-date\">\n        Échéance: {dueDate.toLocaleDateString('fr-FR', {\n          day: '2-digit',\n          month: '2-digit',\n          year: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default SLAIndicator;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,EAAEC,MAAM,QAAQ,UAAU;AACtD,SAASC,EAAE,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAI,CAAC,KAAK;EAChC,IAAI,CAACA,GAAG,IAAI,CAACA,GAAG,CAACC,OAAO,EAAE;IACxB,oBAAOH,OAAA;MAAMI,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACvD;EAEA,MAAMN,OAAO,GAAG,IAAIO,IAAI,CAACR,GAAG,CAACC,OAAO,CAAC;EACrC,MAAMQ,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC;EACtB,MAAME,SAAS,GAAGf,MAAM,CAACM,OAAO,CAAC;EACjC,MAAMU,QAAQ,GAAG,CAACD,SAAS,IAAKT,OAAO,GAAGQ,GAAG,GAAI,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;;EAEnE,IAAIG,WAAW,GAAG,QAAQ;EAC1B,IAAIF,SAAS,EAAE;IACbE,WAAW,GAAG,aAAa;EAC7B,CAAC,MAAM,IAAID,QAAQ,EAAE;IACnBC,WAAW,GAAG,UAAU;EAC1B;EAEA,oBACEd,OAAA;IAAKI,SAAS,EAAE,iBAAiBU,WAAW,EAAG;IAAAT,QAAA,gBAC7CL,OAAA;MAAKI,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBO,SAAS,GAAG,SAAS,GAAGC,QAAQ,GAAG,UAAU,GAAG;IAAgB;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eACNT,OAAA;MAAKI,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBO,SAAS,GACN,cAAchB,mBAAmB,CAACO,OAAO,EAAE;QAAEY,MAAM,EAAEjB,EAAE;QAAEkB,SAAS,EAAE;MAAM,CAAC,CAAC,EAAE,GAC9E,eAAepB,mBAAmB,CAACO,OAAO,EAAE;QAAEY,MAAM,EAAEjB,EAAE;QAAEkB,SAAS,EAAE;MAAM,CAAC,CAAC;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhF,CAAC,eACNT,OAAA;MAAKI,SAAS,EAAC,UAAU;MAAAC,QAAA,GAAC,kBACd,EAACF,OAAO,CAACc,kBAAkB,CAAC,OAAO,EAAE;QAC7CC,GAAG,EAAE,SAAS;QACdC,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE,SAAS;QACfC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC,CAAC;IAAA;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACc,EAAA,GAvCItB,YAAY;AAyClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}